/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SimpleToken, SimpleTokenInterface } from "../SimpleToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600b81526020016a29b4b6b83632aa37b5b2b760a91b8152506040518060400160405280600381526020016253494d60e81b81525081600390805190602001906200006a9291906200019e565b508051620000809060049060208401906200019e565b50620000b09150339050620000986012600a62000359565b620000aa90655af3107a40006200036e565b620000b6565b620003e8565b6001600160a01b038216620001115760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b806002600082825462000125919062000390565b90915550506001600160a01b038216600090815260208190526040812080548392906200015490849062000390565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001ac90620003ab565b90600052602060002090601f016020900481019282620001d057600085556200021b565b82601f10620001eb57805160ff19168380011785556200021b565b828001600101855582156200021b579182015b828111156200021b578251825591602001919060010190620001fe565b50620002299291506200022d565b5090565b5b808211156200022957600081556001016200022e565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200029b5781600019048211156200027f576200027f62000244565b808516156200028d57918102915b93841c93908002906200025f565b509250929050565b600082620002b45750600162000353565b81620002c35750600062000353565b8160018114620002dc5760028114620002e75762000307565b600191505062000353565b60ff841115620002fb57620002fb62000244565b50506001821b62000353565b5060208310610133831016604e8410600b84101617156200032c575081810a62000353565b6200033883836200025a565b80600019048211156200034f576200034f62000244565b0290505b92915050565b6000620003678383620002a3565b9392505050565b60008160001904831182151516156200038b576200038b62000244565b500290565b60008219821115620003a657620003a662000244565b500190565b600181811c90821680620003c057607f821691505b60208210811415620003e257634e487b7160e01b600052602260045260246000fd5b50919050565b610a7480620003f86000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c8063313ce5671161008c57806395d89b411161006657806395d89b41146101af578063a457c2d7146101b7578063a9059cbb146101ca578063dd62ed3e146101dd57600080fd5b8063313ce5671461016c578063395093511461017357806370a082311461018657600080fd5b806323b872dd116100bd57806323b872dd146101375780632e0f26251461014a5780632ff2e9dc1461016457600080fd5b806306fdde03146100e4578063095ea7b31461010257806318160ddd14610125575b600080fd5b6100ec610216565b6040516100f991906107c3565b60405180910390f35b610115610110366004610834565b6102a8565b60405190151581526020016100f9565b6002545b6040519081526020016100f9565b61011561014536600461085e565b6102c2565b610152601281565b60405160ff90911681526020016100f9565b6101296102e6565b6012610152565b610115610181366004610834565b610305565b61012961019436600461089a565b6001600160a01b031660009081526020819052604090205490565b6100ec610344565b6101156101c5366004610834565b610353565b6101156101d8366004610834565b610402565b6101296101eb3660046108bc565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b606060038054610225906108ef565b80601f0160208091040260200160405190810160405280929190818152602001828054610251906108ef565b801561029e5780601f106102735761010080835404028352916020019161029e565b820191906000526020600020905b81548152906001019060200180831161028157829003601f168201915b5050505050905090565b6000336102b6818585610410565b60019150505b92915050565b6000336102d0858285610534565b6102db8585856105c6565b506001949350505050565b6102f26012600a610a24565b61030290655af3107a4000610a30565b81565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906102b6908290869061033f908790610a4f565b610410565b606060048054610225906108ef565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156103f55760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6102db8286868403610410565b6000336102b68185856105c6565b6001600160a01b0383166104725760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103ec565b6001600160a01b0382166104d35760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103ec565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146105c057818110156105b35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103ec565b6105c08484848403610410565b50505050565b6001600160a01b0383166106425760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016103ec565b6001600160a01b0382166106a45760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103ec565b6001600160a01b038316600090815260208190526040902054818110156107335760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016103ec565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061076a908490610a4f565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107b691815260200190565b60405180910390a36105c0565b600060208083528351808285015260005b818110156107f0578581018301518582016040015282016107d4565b81811115610802576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461082f57600080fd5b919050565b6000806040838503121561084757600080fd5b61085083610818565b946020939093013593505050565b60008060006060848603121561087357600080fd5b61087c84610818565b925061088a60208501610818565b9150604084013590509250925092565b6000602082840312156108ac57600080fd5b6108b582610818565b9392505050565b600080604083850312156108cf57600080fd5b6108d883610818565b91506108e660208401610818565b90509250929050565b600181811c9082168061090357607f821691505b6020821081141561092457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561097b5781600019048211156109615761096161092a565b8085161561096e57918102915b93841c9390800290610945565b509250929050565b600082610992575060016102bc565b8161099f575060006102bc565b81600181146109b557600281146109bf576109db565b60019150506102bc565b60ff8411156109d0576109d061092a565b50506001821b6102bc565b5060208310610133831016604e8410600b84101617156109fe575081810a6102bc565b610a088383610940565b8060001904821115610a1c57610a1c61092a565b029392505050565b60006108b58383610983565b6000816000190483118215151615610a4a57610a4a61092a565b500290565b60008219821115610a6257610a6261092a565b50019056fea164736f6c6343000809000a";

export class SimpleToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SimpleToken> {
    return super.deploy(overrides || {}) as Promise<SimpleToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SimpleToken {
    return super.attach(address) as SimpleToken;
  }
  connect(signer: Signer): SimpleToken__factory {
    return super.connect(signer) as SimpleToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleTokenInterface {
    return new utils.Interface(_abi) as SimpleTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleToken {
    return new Contract(address, _abi, signerOrProvider) as SimpleToken;
  }
}
