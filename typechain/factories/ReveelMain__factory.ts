/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ReveelMain, ReveelMainInterface } from "../ReveelMain";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_libraryAddress",
        type: "address",
      },
      {
        internalType: "uint88",
        name: "_platformFee",
        type: "uint88",
      },
      {
        internalType: "address",
        name: "_platformWallet",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ZeroAddressProvided",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract RevenuePath",
        name: "path",
        type: "address",
      },
    ],
    name: "RevenuePathCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newLibrary",
        type: "address",
      },
    ],
    name: "UpdatedLibraryAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint88",
        name: "newFeePercentage",
        type: "uint88",
      },
    ],
    name: "UpdatedPlatformFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "UpdatedPlatformWallet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[][]",
        name: "_walletList",
        type: "address[][]",
      },
      {
        internalType: "uint256[][]",
        name: "_distribution",
        type: "uint256[][]",
      },
      {
        internalType: "uint256[]",
        name: "tierLimit",
        type: "uint256[]",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "bool",
        name: "isImmutable",
        type: "bool",
      },
    ],
    name: "createRevenuePath",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getLibraryAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPaths",
    outputs: [
      {
        internalType: "contract RevenuePath[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "totalPaths",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPlatformFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPlatformWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_libraryAddress",
        type: "address",
      },
    ],
    name: "setLibraryAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint88",
        name: "newFeePercentage",
        type: "uint88",
      },
    ],
    name: "setPlatformFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "setPlatformWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleContractState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

export class ReveelMain__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _libraryAddress: string,
    _platformFee: BigNumberish,
    _platformWallet: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ReveelMain> {
    return super.deploy(
      _libraryAddress,
      _platformFee,
      _platformWallet,
      overrides || {}
    ) as Promise<ReveelMain>;
  }
  getDeployTransaction(
    _libraryAddress: string,
    _platformFee: BigNumberish,
    _platformWallet: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _libraryAddress,
      _platformFee,
      _platformWallet,
      overrides || {}
    );
  }
  attach(address: string): ReveelMain {
    return super.attach(address) as ReveelMain;
  }
  connect(signer: Signer): ReveelMain__factory {
    return super.connect(signer) as ReveelMain__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReveelMainInterface {
    return new utils.Interface(_abi) as ReveelMainInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReveelMain {
    return new Contract(address, _abi, signerOrProvider) as ReveelMain;
  }
}
